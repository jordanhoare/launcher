name: Build and Release

on:
  push:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config build-essential libgtk-3-dev libwebkit2gtk-4.0-dev

    - name: Install frontend dependencies
      run: npm install
      working-directory: frontend

    - name: Build frontend
      run: npm run build
      working-directory: frontend

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.23'

    - name: Install dependencies
      run: go mod tidy

    - name: Install Wails CLI
      run: |
        go install github.com/wailsapp/wails/v2/cmd/wails@latest

    - name: Build binaries for Linux
      run: |
        mkdir -p build/linux
        wails build -platform linux/amd64 -o build/linux/Slender

    - name: Build binaries for Windows
      run: |
        mkdir -p build/windows
        wails build -platform windows/amd64 -o build/windows/Slender.exe

    - name: Get latest tag
      id: get_latest_tag
      run: |
        latest_tag=$(git tag --list 'v*' | sort -V | tail -n 1)
        echo "::set-output name=latest_tag::$latest_tag"

    - name: Increment tag
      id: increment_tag
      run: |
        latest_tag="${{ steps.get_latest_tag.outputs.latest_tag }}"
        if [ -z "$latest_tag" ]; then
          new_tag="v0.0.1"
        else
          # Extract version numbers
          IFS='.' read -r major minor patch <<< "${latest_tag#v}"
          # Increment the patch number
          new_patch=$((patch + 1))
          new_tag="v${major}.${minor}.${new_patch}"
        fi
        echo "::set-output name=new_tag::$new_tag"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.increment_tag.outputs.new_tag }}
        release_name: Release ${{ steps.increment_tag.outputs.new_tag }}
        body: |
          Automatically generated release for tag ${{ steps.increment_tag.outputs.new_tag }}.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}

    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/linux/Slender
        asset_name: Slender-linux-amd64
        asset_content_type: application/octet-stream

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/windows/Slender.exe
        asset_name: Slender-windows-amd64.exe
        asset_content_type: application/octet-stream
